package com.condenast{	import flash.display.Sprite;	import com.greensock.TimelineLite;	import com.greensock.TweenMax;	import com.greensock.easing.Quint;	import flash.events.MouseEvent;	import com.rindra.utils.VP;	import com.rindra.events.VPEvent;	import flash.display.Shape;		public class Product extends Sprite {		private var _lib:Object;		private var _track:Function;		private var count:uint;		private var prefix:String;				private var header:Sprite;		private var header_label:Sprite;		private var content:Sprite;		private var image_gallery:Sprite;		private var image_gallery_slides:Sprite;		private var video_gallery:Sprite;		private var video_gallery_slides:Sprite;		private var content_gallery:Sprite;		private var footer:Sprite;				private var count_image:uint;		private var count_video:uint;				private var section:uint;				private var vp:VP;					private var firstplay:Boolean = true;				public function Product($lib:Object, $f:Function) {			_lib = $lib;			_track = $f;			init();		}				private function init():void{			//Your code goes here!			header = new Sprite;						content = new Sprite;						footer = new Sprite;						init_header();			init_content();			init_footer();						addChild(content);			addChild(header);			addChild(footer);						section = 0;			content.y = -1200;			show();			_track('custom', 'View_Image_1');		}		private function init_header():void{			header_label = new Sprite;			var mask_header:Shape = new Shape;			mask_header.graphics.beginFill(0xff0000);			mask_header.graphics.drawRect(0, 0, 217, 54);			mask_header.graphics.endFill();			//header_label.mask = mask_header;			for(var el in _lib){				if(el.split('header').length > 1){					_lib[el].x = 217*(el.split('header')[1]);					header_label.addChild(_lib[el]);				}			}			_lib.down_arrow.x = 217;			_lib.up_arrow.x = 258.5;			_lib.down_arrow.buttonMode = true;			_lib.up_arrow.buttonMode = true;			header.addChild(mask_header);			header.addChild(header_label);			header.addChild(_lib.up_arrow);			header.addChild(_lib.down_arrow);						_lib.up_arrow.addEventListener(MouseEvent.MOUSE_DOWN, function():void{				section = (section+1<3)?section+1:0; show();				_track('click', 'arrows_click');			});			_lib.down_arrow.addEventListener(MouseEvent.MOUSE_DOWN, function():void{				section = (section-1>=0)?section-1:2; show();				_track('click', 'arrows_click');			});		}		private function init_content():void{			image_gallery = new Sprite;			video_gallery = new Sprite;			content_gallery = new Sprite;						init_image_gallery();			init_video_gallery();			init_content_gallery();						content.addChild(image_gallery);			content.addChild(video_gallery);			content.addChild(content_gallery);		}		private function init_video_gallery():void{			video_gallery.y = 600;			video_gallery_slides = new Sprite;			var dots:Sprite = new Sprite;			var nav:Sprite = addNav(video_gallery, video_gallery_slides, dots, 'video');			vp = new VP('300x168', '',true, false, false, false);			var vpinit:Boolean = false;			vp.help();			for(var el in _lib){				if(el.split('video_img').length > 1){					var i:uint = uint(el.split('video_img')[1]);					_lib[el].x = 300*i;					video_gallery_slides.addChild(_lib[el]);					addDots(dots, i, 'video');				}			}			_lib.intro1.y = 54;			//_lib.videobg.y = 118+54;			video_gallery_slides.y = 118+54;			video_gallery_slides.buttonMode = true;			_lib.slideshownav_video.y = 444+54;			nav.y = 310;			dots.x = (300-dots.width)/2;			dots.y = 464+54;			vp.y = 118+54+58;			vp.visible = false;						video_gallery.addChild(_lib.videobg);			video_gallery.addChild(_lib.slideshownav_video);			video_gallery.addChild(_lib.intro1);			video_gallery.addChild(video_gallery_slides);			video_gallery.addChild(vp);			video_gallery.addChild(nav);			video_gallery.addChild(dots);						vp.addEventListener(VPEvent.VIDEO_START, function($e:VPEvent):void{				if(!vpinit){					vp.addEventListener(VPEvent.VIDEO_10S, function(){ _track('custom', 'Video_'+(count_video+1)+'_10sec') });					vp.addEventListener(VPEvent.VIDEO_MIDPOINT, function(){ _track('custom', 'Video_'+(count_video+1)+'_Midpoint') });					vp.addEventListener(VPEvent.VIDEO_COMPLETE, function(){ _track('custom', 'Video_'+(count_video+1)+'_Complete') });					vp.addEventListener(VPEvent.VIDEO_REPLAY, function(){ _track('custom', 'Video_'+(count_video+1)+'_Replay') });					vpinit = true;				}			});						video_gallery_slides.addEventListener(MouseEvent.MOUSE_DOWN, function($e:MouseEvent):void{				vp.visible = true;				vp.loadNewVideo(_lib.rtmps[count_video]);				if(firstplay) vp.playVideo();				firstplay = false;				_track('custom', 'Video_'+(count_video+1)+'_Play');			});						clearDots(dots, 'video');		}		private function init_content_gallery():void{			var sb:ScrollR = new ScrollR();			sb.y = 77+54+41;			content_gallery.y = 1200;			_lib.intro2.y = 54;			sb.init(300, 374, 25, 28, _lib.sb_bg, _lib.sb_thumb, _lib.sbg, _lib.tbg);			sb.addContent(_lib.contentpanel);			content_gallery.addChild(_lib.intro2);			content_gallery.addChild(sb);		}		private function init_image_gallery(){			image_gallery_slides = new Sprite;			var dots:Sprite = new Sprite;			var nav:Sprite = addNav(image_gallery, image_gallery_slides, dots, 'image');			for(var el in _lib){				if(el.split('gal_img').length > 1){					var i:uint = uint(el.split('gal_img')[1]);					_lib[el].x = 300*i;					image_gallery_slides.addChild(_lib[el]);					addDots(dots, i, 'image');				}			}			_lib.intro0.y = 54;			image_gallery_slides.y = 118+54;			_lib.slideshownav_img.y = 444+54;			nav.y = 300;			dots.x = (300-dots.width)/2;			dots.y = 464+54;						image_gallery.addChild(image_gallery_slides);			image_gallery.addChild(_lib.slideshownav_img);			image_gallery.addChild(_lib.intro0);			image_gallery.addChild(nav);			image_gallery.addChild(dots);						clearDots(dots, 'image');		}		private function addNav(mc:Sprite, slides:Sprite, dots:Sprite, type:String):Sprite{			var nav_left_class:Class = Object(_lib.navLeft).constructor;			var nav_right_class:Class = Object(_lib.navRight).constructor;			var nav_left:Sprite = new nav_left_class();			var nav_right:Sprite = new nav_right_class();			var nav:Sprite = new Sprite;			nav_left.name = 'nav_left';			nav_right.name = 'nav_right';			nav_right.x = 280;			//nav.y = 250;			nav.buttonMode = true;			nav.addEventListener(MouseEvent.MOUSE_DOWN, function($e:MouseEvent):void{				_track('click', 'arrows_click');				if(type == 'image'){					switch($e.target.name){						case 'nav_right': if(count_image++<slides.numChildren-1){slide('image', dots)}else{count_image=0; slide('image', dots);} break;						case 'nav_left': if(count_image-->0){slide('image', dots)}else{count_image=slides.numChildren-1; slide('image', dots);} break;					}				}else{					vp.visible = false;					vp.pauseVideo();					//vp.closeStream();					switch($e.target.name){						case 'nav_right': if(count_video++<slides.numChildren-1){slide('video', dots)}else{count_video=0; slide('video', dots);} break;						case 'nav_left': if(count_video-->0){slide('video', dots)}else{count_video=slides.numChildren-1; slide('video', dots);} break;					}				}			});			nav.addChild(nav_left);			nav.addChild(nav_right);			mc.addChild(nav);						return nav;		}		function addDots(dots:Sprite, id:uint, type:String):void{			var dot_on_class:Class = Object(_lib.dot_on).constructor;			var dot_off_class:Class = Object(_lib.dot_off).constructor;			var dot_on:Sprite = new dot_on_class();			var dot_off:Sprite = new dot_off_class();			var dot:Sprite = new Sprite;			dot.name = 'd'+id;			dot.mouseChildren = false;			dot.buttonMode = true;			dot_on.alpha = 0;			dot_on.name = 'dot_on';			dot_off.name = 'dot_off';			dot.addChild(dot_off);			dot.addChild(dot_on);					dot.x = 17*id;			dots.addChild(dot);			dot.addEventListener(MouseEvent.MOUSE_DOWN, function($e:MouseEvent):void{				clearDots(dots, type);				vp.visible = false;				vp.pauseVideo();				switch(type){					case 'image': count_image = $e.target.name.split('d')[1]; break;					case 'video': count_video = $e.target.name.split('d')[1]; break;				}				slide(type, dots);			});		}				function clearDots(dots:Sprite, type:String):void{			for(var i:uint; i<dots.numChildren; i++){				Sprite(dots.getChildAt(i)).getChildByName('dot_on').alpha = 0;			}			switch(type){				case 'image': Sprite(dots.getChildByName('d'+count_image)).getChildByName('dot_on').alpha = 1; break;				case 'video': Sprite(dots.getChildByName('d'+count_video)).getChildByName('dot_on').alpha = 1; break;			}		}					private function slide(gal_type:String, dots:Sprite):void{			clearDots(dots, gal_type);			switch(gal_type){				case 'image':				TweenMax.to(image_gallery_slides, .5, {x:-300*(count_image), ease:Quint.easeOut});				_track('custom', 'View_Image_'+(count_image+1));				break;				case 'video':				TweenMax.to(video_gallery_slides, .5, {x:-300*(count_video), ease:Quint.easeOut});				break;			}					}		private function init_footer():void{			footer.y = 546;			_lib.cta.x = 150;			footer.addChild(_lib.logo);			footer.addChild(_lib.cta);			_lib.cta.buttonMode = true;			_lib.logo.buttonMode = true;			_lib.cta.addEventListener(MouseEvent.CLICK, function(){ prefix = 'Exit_CTA'; _track('message', 'exit_cta'); });			_lib.logo.addEventListener(MouseEvent.CLICK, function(){ prefix = 'Exit_Logo'; _track('message', 'exit_logo'); });		}		private function show():void{			vp.visible = false;			vp.pauseVideo();			TweenMax.to(content, .5, {y:-600*section, ease:Quint.easeOut});			TweenMax.to(header_label, .5, {x:-217*section, ease:Quint.easeOut});			_track('custom', 'Nav_Tab_'+(section+1));		}		public function _catch($e:*):void{			if($e.message.split('http://').length >= 2){				_track('navigateToURL', prefix + ((prefix == 'CTA - Image_')?(count+1):''), $e.message);			}		}	}}