package com.condenast{import flash.display.Sprite;import flash.events.MouseEvent;import flash.net.navigateToURL;import flash.net.URLRequest;import flash.net.URLLoader;import flash.events.Event;import com.greensock.TweenMax;import com.greensock.TimelineLite;import flash.events.IOErrorEvent;import flash.display.Loader;import flash.display.Shape;import flash.display.MovieClip;	public class ScrollR extends Sprite{		private var _api:Object;		private var _config:Object;		private var _metrics:Object;		private var thumb:Sprite;		private var track:Sprite;		private var yOffset:Number;		private var prc:Number;		private var _mc:Sprite;		private var _mask:Sprite;				private var _track_color:uint;		private var _thumb_color:uint;		private var _sb_width:Number;		private var _thumb_height:Number;		private var _sbg:Sprite;		private var _tbg:Sprite;						private var _width:Number;		private var _height:Number;    	public function ScrollR() {			//this._api = _api;			//this._config = _config;			    	}		public function init(w:Number, h:Number, sbw:Number, th:Number, trackColor:uint, thumbColor:uint, sbg:Sprite, tbg:Sprite):void{			this._width = w;			this._height = h;			_track_color = trackColor;			_thumb_color = thumbColor;			_sb_width = sbw;			_thumb_height = th;			_sbg = sbg;			_tbg = tbg;		}		public function setMetrics(_metrics:Object):void{			this._metrics = _metrics;		}		public function addContent(mc:MovieClip):void{			_mc = new Sprite;			_mc.addChild(mc);				initView(mc.width, mc.height);			initTrack();			initThumb();		}		private function initView(w:Number, h:Number):void{			var s:Shape = new Shape;			s.graphics.beginFill(0xffeeee);			s.graphics.drawRect(0, 0, _width - _sb_width, _height);			_mask = new Sprite;			_mask.addChild(s);			addChild(_mc);			addChild(_mask);			_mc.mask = _mask;		}		private function initTrack():void{			var s:Shape = new Shape;			s.graphics.beginFill(_track_color);			s.graphics.drawRect(0,0,_sb_width,_height);			s.graphics.endFill();			track = new Sprite();			track.addChild(s);			track.addChild(_sbg);			track.x = _width - _sb_width;						addChild(track);		}		private function initThumb():void{			var s:Shape = new Shape;			s.graphics.beginFill(_thumb_color);			s.graphics.drawRect(0,0,_sb_width,_thumb_height);			s.graphics.endFill();			thumb = new Sprite();			thumb.addChild(s);			thumb.addChild(_tbg);			thumb.x = _width - _sb_width;			thumb.buttonMode = true;						if(_mc.height < _height){				thumb.visible = false;				track.visible = false;			}						thumb.addEventListener(MouseEvent.MOUSE_DOWN, function():void{				yOffset = mouseY - thumb.y;				stage.addEventListener(MouseEvent.MOUSE_MOVE, _mouseMove);				stage.addEventListener(MouseEvent.MOUSE_UP, _mouseUp);			});						addChild(thumb);		}				private function _mouseMove($e:MouseEvent):void{			thumb.y = mouseY - yOffset;			if(thumb.y < track.y){				thumb.y = track.y;			}			if(thumb.y > track.y + (track.height - thumb.height)){				thumb.y = track.y + (track.height - thumb.height);			}			prc = (thumb.y - track.y)/(track.y + (track.height - thumb.height));			_mc.y = _mask.y - (prc*(_mc.height - _mask.height));			//TweenMax.to(_mc, .5, {y:_mask.y - (prc*(_mc.height - _mask.height))});			$e.updateAfterEvent();		}				private function _mouseUp($e:MouseEvent):void{			stage.removeEventListener(MouseEvent.MOUSE_MOVE, _mouseMove);			stage.removeEventListener(MouseEvent.MOUSE_UP, _mouseUp);		}		}}