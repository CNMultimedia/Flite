package com.condenast{	import flash.display.Sprite;	import com.greensock.TimelineLite;	import com.greensock.TweenMax;	import com.greensock.easing.Quint;	import flash.events.MouseEvent;	import com.greensock.plugins.TweenPlugin; 	import com.greensock.plugins.ColorTransformPlugin; 		public class Product extends Sprite {		private var _lib:Object;		private var _track:Function;		private var count:uint;		private var prefix:String;				public function Product($lib:Object, $f:Function) {			_lib = $lib;			_track = $f;			init();		}				private function init():void{			//Your code goes here!			var dots:Sprite = new Sprite;			var slides:Sprite = new Sprite;			//var count:uint;			var isAuto:Boolean = true;			slides.y = 72;			_lib.left_arrow.y = 228;			_lib.right_arrow.x = 535;			_lib.right_arrow.y = 228;			_lib.slideshow_area.y = 451;			dots.y = 472;			_lib.logo.y = 499;			_lib.cta.y = 499;			_lib.cta.x = 275;			_lib.close.x = 525;			addChild(slides);			addChild(_lib.header);			addChild(_lib.left_arrow);			addChild(_lib.right_arrow);			addChild(_lib.slideshow_area);			addChild(dots);			addChild(_lib.logo);			addChild(_lib.cta);			addChild(_lib.close);			addEventListener(MouseEvent.MOUSE_DOWN, function():void{ isAuto = false; _track('click', 'total_clicks'); });			_lib.logo.buttonMode = true;			_lib.logo.addEventListener(MouseEvent.CLICK, function():void{ prefix = 'CTA - Main'; _track('message', 'exit_logo'); });			_lib.cta.buttonMode = true;			_lib.cta.addEventListener(MouseEvent.CLICK, function():void{ prefix = 'CTA - Main'; _track('message', 'exit_cta'); });			_lib.close.buttonMode = true;			_lib.close.addEventListener(MouseEvent.MOUSE_DOWN, function():void{ _track('message', 'close'); });			slides.buttonMode = true;			slides.addEventListener(MouseEvent.CLICK, function():void{ prefix = 'CTA - Image_'; _track('message', 'exit_image_'+(count+1)); });			TweenPlugin.activate([ColorTransformPlugin]);			init_arrows(_lib.left_arrow);			init_arrows(_lib.right_arrow);			initSlideshow(slides);			intro();						function init_arrows(arrow:*):void{				TweenMax.to(arrow.bg, .1, {colorTransform:{tint:_lib.arrow_bg_color}}); 				TweenMax.to(arrow.arrow, .1, {colorTransform:{tint:_lib.arrow_color}}); 				arrow.buttonMode = true;				arrow.addEventListener(MouseEvent.MOUSE_DOWN, function():void{					switch(arrow.toString()){						case '[object right_arrow]': if(count++<dots.numChildren-1){auto()}else{count=0; auto();} break;						case '[object left_arrow]': if(count-->0){auto()}else{count=dots.numChildren-1; auto();} break;					}					_track('click', 'View - Image_' + (count+1));				});			}			function initSlideshow():void{				for(var el:String in _lib){					if(el.split('image').length > 1 && el.split('_dsc').length == 1){						_lib[el].x = 550*(uint(el.split('image')[1]));						slides.addChild(_lib[el]);						addDots(uint(el.split('image')[1]));					}				}				dots.x = (550-dots.width)/2;							}			function addDots(id:uint):void{				var dot_on_class:Class = Object(_lib.dot_on).constructor;				var dot_off_class:Class = Object(_lib.dot_off).constructor;				var dot_on:Sprite = new dot_on_class();				var dot_off:Sprite = new dot_off_class();				var dot:Sprite = new Sprite;				dot.name = 'd'+id;				dot.mouseChildren = false;				dot.buttonMode = true;				dot_on.alpha = 0;				dot_on.name = 'dot_on';				dot_off.name = 'dot_off';				dot.addChild(dot_off);				dot.addChild(dot_on);								dot.x = 17*id;				dots.addChild(dot);				dot.addEventListener(MouseEvent.MOUSE_DOWN, function($e:MouseEvent):void{					clearDots();					count = $e.target.name.split('d')[1];					auto();					_track('click', 'View - Image_' + (count+1));				});			}			function clearDots():void{				for(var i:uint; i<dots.numChildren; i++){					Sprite(dots.getChildAt(i)).getChildByName('dot_on').alpha = 0;				}			}			function intro():void{				var t:TimelineLite = new TimelineLite({onComplete:auto});				t.insert(TweenMax.from(_lib.header, .5, {x:-550, ease:Quint.easeOut}));				t.insert(TweenMax.from(slides, .5, {x:550, ease:Quint.easeOut}), .2);				t.insert(TweenMax.from(_lib.slideshow_area, .5, {x:-550, ease:Quint.easeOut}), .4);				t.insert(TweenMax.from(_lib.logo, .5, {y:600, ease:Quint.easeOut}), .5);				t.insert(TweenMax.from(_lib.cta, .5, {y:600, ease:Quint.easeOut}), .6);				t.insert(TweenMax.from(_lib.left_arrow, .5, {x:-15, ease:Quint.easeOut}), .7);				t.insert(TweenMax.from(_lib.right_arrow, .5, {x:550, ease:Quint.easeOut}), .7);				t.insert(TweenMax.from(_lib.close, .5, {x:550, ease:Quint.easeOut}), .7);				t.insertMultiple(TweenMax.allFrom(function():Array{					var a:Array = new Array;					for(var i:uint=0; i<dots.numChildren; i++){						a.push(dots.getChildByName('d'+i));					}					return a;				}(), .5, {y:27, alpha:0, ease:Quint.easeOut}, .1), 1.3);			}			function auto():void{				clearDots();				Sprite(dots.getChildByName('d'+count)).getChildByName('dot_on').alpha = 1;				TweenMax.to(slides, .5, {x:(-(count)*550), onComplete:function():void{					TweenMax.to({}, 3, {onComplete:function():void{						if(count+1<dots.numChildren && isAuto){							count++;							auto();						}					}});				}});			}		}		public function _catch($e:*):void{			if($e.message.split('http://').length >= 2){				_track('navigateToURL', prefix + ((prefix == 'CTA - Image_')?(count+1):''), $e.message);			}		}	}}